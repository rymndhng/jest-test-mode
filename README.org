* jest-test-mode.el
Emacs minor mode for running jest (Nodejs test framework). Inspired by `ruby-test-mode` and `cider-test`.

** Keybindings
jest-test-mode comes with some default keybindings:

   | Binding     | Action                                                           |
   |-------------+------------------------------------------------------------------|
   | ~C-c C-t n~   | Runs tests in the current buffer.                                |
   | ~C-c C-t p~   | Runs all tests in the project.                                   |
   | ~C-c C-t t~   | Runs the describe block at the current point.                    |
   | ~C-c C-t a~   | Re-runs the previous test command.                               |
   | ~C-c C-t d n~ | Runs tests in the current buffer with node debugger.             |
   | ~C-c C-t d t~ | Runs the describe block at the current point with node debugger. |
   | ~C-c C-t d a~ | Re-runs the previous test command with node debugger.            |

** Installation
Currently this package is not available in melpa.

For spacemacs users you can install it by adding this to
=dotspacemacs-additional-packages=.

#+begin_src elisp
(jest-test-mode :location (recipe :fetcher github :repo "rymndhng/jest-test-mode"))
#+end_src

There are various ways of enabling this minor mode automatically for supported files & modes:

With use-package:

#+begin_src elisp
(use-package jest-test-mode
    :config (jest-test-global-mode 1)
#+end_src

or use:

#+begin_src elisp
(require 'jest-test-mode)
(jest-test-global-mode)
#+end_src

** Resources
Thanks to the following resources for building this layer:
- For inspiration and structuer: https://github.com/ruby-test-mode/ruby-test-mode
- For error highlighting: https://emacs.stackexchange.com/questions/27213/how-can-i-add-a-compilation-error-regex-for-node-js

** License
This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 3, or (at your option) any later version.

** Testing Notes
Verify package can be included cleanly:

#+begin_src sh
  # If using railwaycat/emacs, do this first
  export EMACS_COMMAND=/Applications/Emacs.app/Contents/MacOS/Emacs.sh

  # 1 Checkout melpa & cd in
  git clone git@github.com:melpa/melpa.git && cd melpa

  # 3 clean things up
  git clean -fdx

  # 4 package
  make recipes/jest-test-mode

  # 5 test-install
  make sandbox INSTALL=jest-test-mode
#+end_src
